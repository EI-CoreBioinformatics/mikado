{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "required": ["name"],
    "SimpleComment":
    {"type": "object",
    "SimpleComment": ["This is a standard configuration file for Daijin. Fields:",
    "- short_reads: this section deals with RNA-Seq short read input data.",
    "- name: name of the species under analysis.",
    "- reference: reference data to use. A reference genome is required."],
    "properties": {}},
    "short_reads": {
      "SimpleComment": ["Parameters related to the reads to use for the assemblies. Voices:",
          "- r1: array of left read files.",
          "- r2: array of right read files. It must be of the same length of r1; if one",
          "  one or more of the samples are single-end reads, add an empty string.",
          "- samples: array of the sample names. It must be of the same length of r1.",
          "- strandedness: array of strand-specificity of the samples. It must be of the",
          "  same length of r1. Valid values: fr-firststrand, fr-secondstrand, fr-unstranded."
        ],
      "type": "object",
      "required": ["r1", "r2", "samples", "strandedness"],
      "properties": {
        "r1": {
          "type": "array",
          "required": true,
          "default": [],
          "uniqueItems": true,
          "items": {"type": "string"}
        },
        "r2": {
          "type": "array",
          "required": true,
          "items": {"type": ["string", "null"]},
          "default": []
        },
        "samples": {
          "type": "array",
          "items": {"type": "string"},
          "default": []
        },
        "strandedness": {
          "type": "array",
          "required": true,
          "default": [],
          "items": {"type": "string", "enum": ["fr-firststrand", "fr-secondstrand", "fr-unstranded"]}
        }
      }
    },
    "name": {
      "type": "string",
      "default": "Daijin",
      "SimpleComment": ["Name to be used for the project."],
      "required": true
    },
    "out_dir": {
      "type": "string",
      "default": "daijin",
      "Comment": "Output directory for the project",
      "required": true
    },
    "threads": {
      "type": "integer",
      "default": 4,
      "Comment": "Threads to be used per process.",
      "required": true
    },
    "scheduler": {
      "type": ["string", null],
      "default": "",
      "enum": ["LSF", "SLURM", "PBS", ""],
      "Comment": "Scheduler to be used for the project. Set to null if you plan to use DRMAA or are using a local machine.",
      "required": true
    },
    "aligners": {
      "type": "object",
      "anyOf": [
        {"required":["tophat2"]},
        {"required":["hisat2"]},
        {"required":["star"]},
        {"required":["gsnap"]}
      ],
       "additionalProperties": false,
      "properties": {
          "tophat2": {"type": "array", "items": {"type": "string"}, "minItems": 1},
          "hisat2": {"type": "array", "items": {"type": "string"}, "minItems": 1},
          "star": {"type": "array", "items": {"type": "string"}, "minItems": 1}},
          "gsnap": {"type": "array", "items": {"type": "string"}, "minItems": 1}
        },
    "asm_methods": {
      "type": "object",
      "anyOf": [
        {
          "required": [
            "cufflinks"
          ]
        },
        {
          "required": [
            "stringtie"
          ]
        },
        {
          "required": [
            "class"
          ]
        },
        {
          "required": [
            "trinity"
          ]
        }
      ],
      "additionalProperties": false,
      "properties": {
        "stringtie": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "cufflinks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "class": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "trinity": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "reference": {
        "$ref": "configuration_blueprint.json#properties/reference"
      },
    "transdecoder": {
      "type": "object",
      "properties": {
        "min_protein_len": {"type": "integer", "minimum": 1, "default": 30, "required": true}
      },
      "required": ["min_protein_len"]
    },
    "blastx": {
      "type":"object",
      "properties":{
        "prot_db": {"type": "string", "required": true},
        "evalue": {"type": "number", "minimum": 0, "default": 0.0000001},
        "max_target_seqs": {"type": "integer", "minimum": 1, "default": 10},
        "chunks": {"type": "integer", "minimum": 1, "default": 10}
      }
    },
    "mikado": {
      "type": "object",
      "properties": {
        "modes": {"type": "array", "minItems": 1,
          "items": {"type": "string",
            "enum": ["nosplit", "split", "lenient", "permissive", "stringent"]},
          "default": ["permissive"],
        "required": true},
        "db_settings": {"$ref": "configuration_blueprint.json#properties/db_settings"},
        "pick": {
          "type": "object",
          "properties": {
            "scoring_file": {"$ref": "configuration_blueprint.json#properties/pick/properties/scoring_file"},
            "alternative_splicing": {
              "$ref": "configuration_blueprint.json#properties/pick/properties/alternative_splicing"}
          }
        },
        "serialise": {
          "type": "object",
          "properties": {
            "force": {
              "type": "boolean",
              "default": true
            }
          },
          "required": ["force"]
        },
        "prepare": {
          "type": "object",
          "SimpleComment": ["Options related to Mikado prepare. Possibilities:",
          "- lenient: whether to activate the lenient mode of Mikado.",
          "- canonical: which combinations of donor and acceptor sites are considered as valid."],
          "properties": {
          "canonical": {
            "$ref": "configuration_blueprint.json#properties/prepare/properties/canonical"},
          "lenient":  {
            "$ref": "configuration_blueprint.json#properties/prepare/properties/lenient"}
          }
        }
      }
    }
  }
}
