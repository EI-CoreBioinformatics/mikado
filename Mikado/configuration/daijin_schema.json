{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "SimpleComment": ["This is a standard configuration file for Daijin. Fields:",
    "- short_reads: this section deals with RNA-Seq short read input data.",
    "- name: name of the species under analysis.",
    "- reference: reference data to use. A reference genome is required."],
  "properties": {
    "required": ["name", "pick", "threads", "scheduler"],
    "load":{
      "SimpleComment": ["Commands to use to load/select the versions of the programs to use. Leave an empty string if no loading is necessary."],
      "type": "object",
      "required": ["tophat", "gmap", "star", "hisat", "samtools", "cufflinks", "trinity", "scallop",
        "stringtie", "class", "transdecoder", "portcullis", "mikado", "blast"],
      "properties": {
       "tophat": {"type": "string", "default": ""},
        "gmap": {"type": "string", "default": ""},
        "star": {"type": "string", "default": ""},
        "hisat": {"type": "string", "default": ""},
        "samtools": {"type": "string", "default": ""},
        "cufflinks": {"type": "string", "default": ""},
        "scallop": {"type": "string", "default": ""},
        "trinity": {"type": "string", "default": ""},
        "stringtie": {"type": "string", "default": ""},
        "class": {"type": "string", "default": ""},
        "transdecoder": {"type": "string", "default": ""},
        "prodigal": {"type": "string", "default": ""},
        "portcullis": {"type": "string", "default": ""},
        "mikado": {"type": "string", "default": ""},
        "diamond": {"type": "string", "default": ""},
        "blast": {"type": "string", "default": ""}
      }
    },
    "pick":  { "$ref": "configuration_blueprint.json#properties/pick/properties"},
    "prepare":  {"$ref": "configuration_blueprint.json#properties/prepare/properties"},
    "serialise":  {"$ref": "configuration_blueprint.json#properties/serialise/properties"},
    "portcullis": {
      "SimpleComment": ["Options related to portcullis"],
      "type": "object",
      "required": ["do", "canonical_juncs"],
      "properties": {
       "do": {"type": "boolean", "default": true},
        "canonical_juncs": {"type": "string", "default": "C,S"}
      }
    },
    "aln_index": {
      "SimpleComment": ["Options related to indexing."],
      "Comment": ["Options related to indexing."],
      "type": "object",
      "required": [],
      "properties": {
        "star": {"type": "string", "default": ""}
      }
    },
    "long_reads": {
      "type": "object",
      "SimpleComment": ["Parameters related to long reads to use for the assemblies."],
      "Comment": ["Parameters related to long reads to use for the assemblies."],
      "properties": {
        "files": {"type": "array", "default": []},
        "samples": {"type": "array", "default": []},
        "strandedness": {"type": "array", "default": [], "items": {"type": "string",
            "enum": ["fr-firststrand",
              "fr-secondstrand",
              "fr-unstranded",
            "f", "r"]}},
        "skip_split": {"type": "boolean", "default": true}
      }
    },
    "short_reads": {
      "SimpleComment": ["Parameters related to the reads to use for the assemblies. Voices:",
          "- r1: array of left read files.",
          "- r2: array of right read files. It must be of the same length of r1; if one",
          "  one or more of the samples are single-end reads, add an empty string.",
          "- samples: array of the sample names. It must be of the same length of r1.",
          "- strandedness: array of strand-specificity of the samples. It must be of the",
          "  same length of r1. Valid values: fr-firststrand, fr-secondstrand, fr-unstranded."
        ],
      "Comment": ["Parameters related to the reads to use for the assemblies. Voices:",
          "- r1: array of left read files.",
          "- r2: array of right read files. It must be of the same length of r1; if one",
          "  one or more of the samples are single-end reads, add an empty string.",
          "- samples: array of the sample names. It must be of the same length of r1.",
          "- strandedness: array of strand-specificity of the samples. It must be of the",
          "  same length of r1. Valid values: fr-firststrand, fr-secondstrand, fr-unstranded."
        ],
      "type": "object",
      "required": ["r1", "r2", "samples", "strandedness"],
      "properties": {
        "r1": {
          "type": "array",
          "default": [],
          "uniqueItems": true,
          "items": {"type": "string"}
        },
        "r2": {
          "type": "array",
          "items": {"type": ["string", "null"]},
          "default": []
        },
        "samples": {
          "type": "array",
          "items": {"type": "string"},
          "default": []
        },
        "strandedness": {
          "type": "array",
          "default": [],
          "items": {"type": "string",
            "enum": ["fr-firststrand",
              "fr-secondstrand",
              "fr-unstranded",
            "f", "r"]}
        }
      }
    },
    "name": {
      "type": "string",
      "default": "Daijin",
      "SimpleComment": ["Name to be used for the project."],
      "Comment": ["Name to be used for the project."]
    },
    "out_dir": {
      "type": "string",
      "default": "daijin",
      "Comment": ["Output directory for the project"],
      "SimpleComment": ["Output directory for the project"]
    },
    "threads": {
      "type": "integer",
      "default": 4,
      "Comment": "Threads to be used per process.",
      "minimum": 1
    },
    "scheduler": {
      "type": ["string"],
      "default": "",
      "enum": ["LSF", "SLURM", "PBS", "", "local"],
      "Comment": ["Scheduler to be used for the project. Set to null if you plan to use DRMAA or are using a local machine."],
      "SimpleComment": ["Scheduler to be used for the project. Set to null if you plan to use DRMAA or are using a local machine."]
    },
    "align_methods": {
      "type": "object",
      "SimpleComment": ["Aligners to use. Each aligner can be invoked multiple times:",
                        "the per-aligner list includes the extra command line arguments",
                        "to be passed to the program"],
      "Comment": ["Aligners to use. Each aligner can be invoked multiple times:",
                  "the per-aligner list includes the extra command line arguments",
                  "to be passed to the program"],
      "additionalProperties": false,
      "properties": {
        "SimpleComment": {"type": "array", "items": {"type": "string"}},
        "Comment": {"type": "array", "items": {"type": "string"}},
        "tophat": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "hisat": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "star": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "gsnap": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "long_read_align_methods": {
      "type": "object",
      "additionalProperties": false,
      "SimpleComment": ["Aligners for long reads to use. Each aligner can be invoked multiple times:",
                        "the per-aligner list includes the extra command line arguments",
                        "to be passed to the program"],
      "Comment": ["Aligners for long reads to use. Each aligner can be invoked multiple times:",
                  "the per-aligner list includes the extra command line arguments",
                  "to be passed to the program"],
      "properties": {
        "SimpleComment": {"type": "array", "items": {"type": "string"}},
        "Comment": {"type": "array", "items": {"type": "string"}},
        "star": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "gmap": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "asm_methods": {
      "type": "object",
      "additionalProperties": false,
      "SimpleComment": ["Short-read assemblers to use. Each assembler can be invoked multiple times:",
                        "the per-aligner list includes the extra command line arguments",
                        "to be passed to the program"],
      "Comment": ["Short-read assemblers to use. Each assembler can be invoked multiple times:",
                  "the per-aligner list includes the extra command line arguments",
                  "to be passed to the program"],
      "properties": {
        "SimpleComment": {"type": "array", "items": {"type": "string"}},
        "Comment": {"type": "array", "items": {"type": "string"}},
        "stringtie": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "cufflinks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "class": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "scallop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "trinity": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      }
    },
    "reference": {
        "$ref": "configuration_blueprint.json#properties/reference"
      },
    "orf_calling": {
      "required": ["min_protein_len"],
      "SimpleComment": ["Parameters related to the ORF calling:",
      "- min_protein_len: minimum length of called proteins (in AAs). Default: 30 (90 nts)"],
      "Comment": ["Parameters related to the ORF calling:",
      "- min_protein_len: minimum length of called proteins (in AAs). Default: 30 (90 nts)",
      "- execute: boolean flag. Default: true, ie execute the ORF calling."],
      "type": "object",
      "properties": {
        "min_protein_len": {"type": "integer", "minimum": 1, "default": 30},
        "execute": {"type": "boolean", "default": true}
      }
    },
    "blastx": {
      "type":"object",
      "required": ["prot_db", "evalue"],
      "Comment": ["Parameters related to the homology search via DIAMOND or BLASTX:",
      "- prot_db: FASTA file(s) to be used as database for the homology search. Multiple files can be provided,",
      " and they will be merged into a single database before running.",
      "- evalue: maximum e-value. Default 1e-7",
      "- max_target_seqs: maximum number of targets that the homology will report. Default: 10",
      "- chunks: number of chunks to divide the search into. Must be equal or greater than the number of processes."],
      "SimpleComment": ["Parameters related to the homology search via DIAMOND or BLASTX:",
      "- prot_db: FASTA file(s) to be used as database for the homology search. Multiple files can be provided,",
      " and they will be merged into a single database before running.",
      "- evalue: maximum e-value. Default 1e-7"],
      "properties":{
        "prot_db": {"type": "array", "default": []},
        "evalue": {"type": "number", "minimum": 0, "default": 0.0000001},
        "max_target_seqs": {"type": "integer", "minimum": 1, "default": 10},
        "chunks": {"type": "integer", "minimum": 1, "default": 10}
      }
    },
    "mikado": {
      "type": "object",
      "SimpleComment": ["Parameters related to the Mikado execution:",
        "- modes: which modes to run Mikado into. Default: permissive (split multiple ORF models unless",
        "there is strong BLAST evidence against the decision)."],
      "Comment": ["Parameters related to the Mikado execution:",
        "- modes: which modes to run Mikado into. Default: permissive (split multiple ORF models unless",
        "there is strong BLAST evidence against the decision).",
        "- use_diamond: use DIAMOND instead of NCBI BLASTX. Default: true",
        "- use_transdecoder: use TransDecoder instead of Prodigal for ORF calling. Default: false"
      ],
      "required": ["modes"],
      "properties": {
        "modes": {"type": "array", "minItems": 1,
          "items": {"type": "string",
            "enum": ["nosplit", "split", "lenient", "permissive", "stringent"]},
          "default": ["stringent"]
        },
        "use_diamond": {"type": "boolean", "default": true},
        "use_prodigal": {"type": "boolean", "default": false}
      }
    },
    "tgg": {
      "type": "object",
      "SimpleComment": ["Options related to genome-guided Trinity."],
      "Comment": ["Options related to genome-guided Trinity.",
      "- max_mem: Maximum memory to be used for the assembly. Default: 6000Mb",
      "- npaths: number of alignments per sequence, using GMAP. Default: 0 (one alignment per sequence, exclude chimeric).",
      "- identity: minimum identity for any alignment. Default: 95%",
      "- coverage: minimum coverage for any alignment. Default: 70%"],
      "properties": {
        "max_mem": {"type": "integer", "default": 6000, "minimum": 1000},
        "npaths": {"type": "integer", "default": 0},
        "identity": {"type": "number", "default": 0.95, "minimum": 0, "maximum": 1},
        "coverage": {"type": "number", "default": 0.70, "minimum": 0, "maximum": 1}
      }
    }
  }
}
